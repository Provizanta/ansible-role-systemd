---

- name: establish package
  become: true
  package:
    name: systemd
    state: present

- name: configure units
  vars:
    normalized_systemd_units: "{{ (systemd_units | rejectattr('destination', 'defined') | map('combine', {'destination': 'primary'}) | list)
            + (systemd_units | selectattr('destination', 'defined') | list) }}"
  block:
    - name: ensure unit directories presence
      become: "{{ item != 'user' }}"
      file:
        path: "{{ unit_file_path[item] }}"
        mode: "u=rwX,go=r"
        recurse: true
        state: directory
      loop: "{{ normalized_systemd_units | map(attribute='destination') | unique | list }}"

    - name: establish units
      when:
        - "unit['destination'] != 'user'"
        - "'content' in unit"
      become: true
      template:
        src: unit.j2
        dest: "{{ unit_file_path[unit['destination']] }}/{{ unit['name'] | regex_replace('[^0-9a-zA-Z_]+', '_') }}.{{ unit['type'] }}"
        mode: "u=rwx,go=r"
        # validate: "systemd-analyze verify %s"
      loop_control:
        loop_var: unit
      loop: "{{ normalized_systemd_units }}"
      register: unit_configurations

    - name: reload daemons
      block:
        - name: reload system daemon
          when: unit_configurations.results | selectattr('changed') | map(attribute='unit') | rejectattr('destination', 'equalto', 'user') | list | length > 0
          become: true
          systemd:
            daemon_reload: true

        - name: reload user daemon
          when: unit_configurations.results | selectattr('changed') | map(attribute='unit') | selectattr('destination', 'equalto', 'user') | list | length > 0
          become: false
          systemd:
            daemon_reload: true
            scope: user

    - name: initialize units
      become: true
      systemd:
        name: "{{ unit['name'] | regex_replace('[^0-9a-zA-Z_]+', '_') }}.{{ unit['type'] }}"
        state: "{{ unit['state'] | default('started') }}"
        enabled: "{{ unit['enabled'] | default('true') }}"
        masked: "{{ unit['masked'] | default('false') }}"
        scope: "{{ (unit['destination'] == 'user') | ternary('user', 'system') }}"
      loop_control:
        loop_var: unit
      loop: "{{ normalized_systemd_units | selectattr('type', 'equalto', 'service') | list }}"
